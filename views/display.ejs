<!DOCTYPE html>
<html>
	<head>
		<title><%= title %></title>
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<% include header %>
	</head>
	</head>
	<body>
		<div class="container">
			<% if (typeof(objectModelId) != 'undefined') { %>
				<a class="btn btn-success" role="button" href="<%= '/app/#!' + objectPath + '/chinh-sua/' + objectModelId %>">Chỉnh sửa mẫu dữ liệu này</a>
				<a class="btn btn-primary" role="button" href="<%= '/app/#!/bai-dang' + objectPath %>">Đến trang quản lý mẫu</a>
			<% } %>
			<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
				<%
				// console.log("here");
				// console.log(staticPath);
				var sp = staticPath;
				// do not know why we need to declare this variable.
				// staticPath can not be accessed inside below functions
				function display(obj){
					// console.log(staticPath)
					// console.log(count)
					function extension(filename) {
						var idx = filename.lastIndexOf('.');
						if (idx >= 0){
							return filename.substring(idx + 1);
						}
						return 'nothing';
					}
					function mediaType(extension) {
						// console.log(extension)
						var imgs = ["jpg", "jpeg", "gif", "png", "tif", "tiff", "raw", "bmp", "bpg", "eps"];
						var videos = ["mp4","mpg","flv","rm","webm","mkv","ogg","avi","mov","wmv","3gp","m4v"];
						if (imgs.indexOf(extension) >= 0){
							return 'image';
						}
						if (videos.indexOf(extension) >= 0){
							return 'video';
						}
						return 'document'
					}
					if (obj instanceof Array){

						var result =  obj.reduce(function (preStr, curElement){
							// console.log(curElement.split('_+_')[1]);
							if (curElement.length < 1){
								return preStr;
							}
							var ext = extension(curElement);
							switch (mediaType(ext)){
								case 'video':
									preStr += '<video width="160" height="120" controls> <source src="/content/download' + sp + '/' + curElement + '"></video>'
									break;
								case 'image':
									preStr += '<a href="/content/download' + sp + '/' + curElement + '">' + '<img class="img-responsive" width="160" src="' + sp + '/' + curElement + '">' + '</a><br/>\n';
									break;
								default:
									preStr += '<a href="/content/download' + sp + '/' + curElement + '">' + curElement.split('_+_')[1] + '</a><br/>\n';
									break;
							}
							return preStr;
						}, '');
						return result;
					}
					else if (obj instanceof Date){
						return [obj.getDate(), obj.getMonth() + 1, obj.getFullYear()].join(' / ');
					}
					// Need to escape to prevent injected HTML + JS
					return escape(obj);
				}

				function propDiff (obj1, obj2, prop) {
					try {
						if ((prop in obj1) && !(prop in obj2)){
							return true;
						}

						if (!(prop in obj1) && (prop in obj2)){
							return true;
						}

						return diff(obj1[prop], obj2[prop]);
					}
					catch (e){
						console.log(e);
						console.log('+++')
						console.log(prop);
						console.log('+++')
						console.log(obj1[prop]);
						console.log('+++')
						console.log(obj2[prop]);
						console.log('+++')
						return false;
					}

				}

				function diff (prop1, prop2) {

					// Problem here
					if (!prop1 && !prop2){
						return false;
					}
					if ((!prop1 && prop2) || (prop1 && !prop2)){
						return true;
					}
					// End
					
					if ((prop1 instanceof Array) && (prop2 instanceof Array)){
						if (prop1.length != prop2.length){
							return true;
						}
						for (var i = 0; i < prop1.length; i++) {
							if (prop2.indexOf(prop1[i]) < 0){
								return true;
							}
							var isDifferent = diff(prop1[i], prop2[i]);
							if (isDifferent){
								return true;
							}
						}
						return false;
					}
					if ((prop1 instanceof Date) && (prop2 instanceof Date)){
						return (prop1 - prop2 == 0);
					}
					if ((typeof(prop1) == typeof(prop2)) && (typeof(prop1) == 'object')){
						if (Object.keys(prop1).length != Object.keys(prop2).length){
							return true;
						}
						var keys = Object.keys(prop1);
						for(var i = 0; i < keys; i++){
							var isDifferent = diff(prop1[keys[i]], prop2[keys[i]]);
							if (isDifferent){
								return true;
							}
						}
						return false;
					}
					if (((typeof(prop1) == typeof(prop2)) && (typeof(prop1) == 'string'))){
						return prop1.localeCompare(prop2)
					}
					return (prop1 !== prop2);
				}
				var diffs = [];
				var obj1 = obj1;
				// console.log(obj1);
				var obj2 = obj2;
				// console.log('doSau' in obj1);
				// console.log('doSau' in obj2);
				// console.log(obj2);
					if (count == 2){
						console.log(count);
						// console.log(obj1);
						for(var i in obj1){
							console.log("processing " + i);
							if (propDiff(obj1, obj2, i)){
								console.log("pushing " + i);
								diffs.push(i);
							}
						}
						console.log("===")
						// console.log(count);
						console.log(obj2);
						for(var i in obj2){
							if (diffs.indexOf(i) < 0){
								if (propDiff(obj1, obj2, i)){
									diffs.push(i);
								}
							}
							
						}
					}
					else {
						// console.log(Object.keys(obj1));
						diffs = Object.keys(obj1).filter(function (element) {
							if (obj1[element] instanceof Array){
								return (obj1[element].length > 0);
							}
							if (obj1[element] instanceof Date){
								return true;
							}
							if (obj1[element] instanceof Object){
								return Object.keys(obj1[element]).length > 0
							}
							return obj1[element] ? true : false;
						});
					}
					
				%>
				<table class="table table-hover">
					<thead>
						<tr>
							<th><strong>Thuộc tính</strong></th>
							<th>Giá trị</th>
							<% if (count == 2) { %>
								<th>Giá trị mới</th>
							<% } %>
						</tr>
					</thead>
					<tbody>
				<% for (var i = 0; i < diffs.length; i++){ %>
					<tr>
						<td><b><%= props[diffs[i]] %></b></td>
						<td><span class="text-info"><%- display(obj1[diffs[i]]) %></span></td>
						<% if (count == 2) { %>
								<td><span class="text-success"><%- display(obj2[diffs[i]]) %></span></td>
						<% } %>
						
					</tr>
				<% } %>
					</tbody>
				</table>
			</div>
		</div>
	</body>
</html>
